<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ApiCatalogoTurístico</name>
    </assembly>
    <members>
        <member name="M:ApiCatalogoTurístico.Controllers.V1.TurísticoController.Obter(System.Int32,System.Int32)">
            <summary>
            Buscar todos os lugares turístico de forma paginada
            </summary>
            <remarks>
            Não é possível retornar os lugares turístico sem paginação
            </remarks>
            <param name="pagina">Indica qual página está sendo consultada. Mínimo 1</param>
            <param name="quantidade">Indica a quantidade de reistros por página. Mínimo 1 e máximo 50</param>
            <response code="200">Retorna a lista de lugar turístico</response>
            <response code="204">Caso não haja lugar turístico</response>   
        </member>
        <member name="M:ApiCatalogoTurístico.Controllers.V1.TurísticoController.Obter(System.Guid)">
            <summary>
            Buscar um lugar turístico pelo seu Id
            </summary>
            <param name="idJogo">Id do lugar turístico buscado</param>
            <response code="200">Retorna o lugar turístico filtrado</response>
            <response code="204">Caso não haja lugar turístico com este id</response>   
        </member>
        <member name="M:ApiCatalogoTurístico.Controllers.V1.TurísticoController.InserirTurístico(ExemploApiCatalogoTurístico.InputModel.TurísticoInputModel)">
            <summary>
            Inserir um lugar turístico no catálogo
            </summary>
            <param name="turísticoInputModel">Dados do lugar turístico a ser inserido</param>
            <response code="200">Caso o lugar turístico seja inserido com sucesso</response>
            <response code="422">Caso já exista um lugar turístico com mesmo nome para a mesma produtora</response>   
        </member>
        <member name="M:ApiCatalogoTurístico.Controllers.V1.turísticoController.AtualizarTurístico(System.Guid,ApiCatalogoTurístico.InputModel.TurísticoInputModel)">
            <summary>
            Atualizar um jogo no catálogo
            </summary>
            /// <param name="idJogo">Id do lugar turístico a ser atualizado</param>
            <param name="jogoInputModel">Novos dados para atualizar o lugar turístico indicado</param>
            <response code="200">Caso o lugar turístico seja atualizado com sucesso</response>
            <response code="404">Caso não exista um lugar turístico com este Id</response>   
        </member>
        <member name="M:ApiCatalogoTurístico.Controllers.V1.TurísticoController.AtualizarTurístico(System.Guid,System.Double)">
            <summary>
            Atualizar o preço de um lugar turístico
            </summary>
            /// <param name="idTurístico">Id do lugar turístico a ser atualizado</param>
            <param name="preco">Novo preço do lugar turístico</param>
            <response code="200">Caso o preço seja atualizado com sucesso</response>
            <response code="404">Caso não exista um lugar turístico com este Id</response>   
        </member>
        <member name="M:ApiCatalogoTurístico.Controllers.V1.TurísticoController.ApagarTurístico(System.Guid)">
            <summary>
            Excluir um lugar turístico
            </summary>
            /// <param name="idTurístico">Id do lugar turístico a ser excluído</param>
            <response code="200">Cao o preço seja atualizado com sucesso</response>
            <response code="404">Caso não exista um lugar turístico com este Id</response>   
        </member>
    </members>
</doc>
